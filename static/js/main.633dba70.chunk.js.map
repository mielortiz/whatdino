{"version":3,"sources":["que_ans.js","App.js","index.js"],"names":["questions","image","answerOptions","answerText","isCorrect","App","useState","showScore","setShowScore","score","setScore","quecount","setQuecount","queItems","length","i","push","items","setItems","sort","Math","random","randomItem","currentQuestion","setCurrentQuestion","console","log","sortAnswers","className","onClick","window","location","reload","src","alt","map","index","alert","y","splice","handleAnswerButtonClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.633dba70.chunk.js","sourcesContent":["const questions = [\r\n    {\r\n        image: 'http://images.dinosaurpictures.org/dinosaurs-tyrannosaurus_00399363_347a.jpg',\r\n        answerOptions: [\r\n            { answerText: 'Tyrannosaurus Rex', isCorrect: true },\r\n            { answerText: 'Aviatyrannis', isCorrect: false },\r\n            { answerText: 'Suskityrannus', isCorrect: false },\r\n        ],\r\n    },\r\n    {   \r\n        image:'http://images.dinosaurpictures.org/triceratops5_0fb0.jpg',\r\n        answerOptions: [\r\n            { answerText: 'Saltriosaurus', isCorrect: false },\r\n            { answerText: 'Triceratops', isCorrect: true },\r\n            { answerText: 'Eotriceratops', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        image:'http://images.dinosaurpictures.org/pterodactyl-adrian-chesterman_54f6.jpg',\r\n        answerOptions: [\r\n            { answerText: 'Pterodactyl', isCorrect: true },\r\n            { answerText: 'Triceratops', isCorrect: false },\r\n            { answerText: 'Apatosaurus', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        image:'http://images.dinosaurpictures.org/velociraptor_12_c4fd.jpg',\r\n        answerOptions: [\r\n            { answerText: 'Pterodactyl', isCorrect: false },\r\n            { answerText: 'Triceratops', isCorrect: false },\r\n            { answerText: 'Velociraptor', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        image:'http://images.dinosaurpictures.org/papo_brachiosaurus_2012_cf3f.jpg',\r\n        answerOptions: [\r\n            { answerText: 'Velociraptor', isCorrect: false },\r\n            { answerText: 'Triceratops', isCorrect: false },\r\n            { answerText: 'Brachiosaurus', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        image:'http://images.dinosaurpictures.org/spinosaurus_2710.jpg',\r\n        answerOptions: [\r\n            { answerText: 'Velociraptor', isCorrect: false },\r\n            { answerText: 'Brachiosaurus', isCorrect: false },\r\n            { answerText: 'Spinosaurus', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        image:'http://images.dinosaurpictures.org/allosaurus_papo_a699.jpg',\r\n        answerOptions: [\r\n            { answerText: 'Spinosaurus', isCorrect: false },\r\n            { answerText: 'Stegosaurus', isCorrect: false },\r\n            { answerText: 'Allosaurus', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        image:'http://images.dinosaurpictures.org/127544_Dilophosaurus_Pose_2_000.jpg0c59dae3-f8e3-48a4-a5d4-da8ff572cef3Original_eb0a.jpg',\r\n        answerOptions: [\r\n            { answerText: 'Archaeopteryx', isCorrect: false },\r\n            { answerText: 'Triceratops', isCorrect: false },\r\n            { answerText: 'Dilophosaurus', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        image:'http://images.dinosaurpictures.org/phpThumb_f3ab.jpg',\r\n        answerOptions: [\r\n            { answerText: 'Archaeopteryx', isCorrect: false },\r\n            { answerText: 'Allosaurus', isCorrect: false },\r\n            { answerText: 'Stegosaurus', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        image:'http://images.dinosaurpictures.org/archaeopteryx_2_fbd3.jpg',\r\n        answerOptions: [\r\n            { answerText: 'Stegosaurus', isCorrect: false },\r\n            { answerText: 'Triceratops', isCorrect: false },\r\n            { answerText: 'Archaeopteryx', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        image:'http://images.dinosaurpictures.org/apatosaurusVN_7a58.jpg',\r\n        answerOptions: [\r\n            { answerText: 'Archaeopteryx', isCorrect: false },\r\n            { answerText: 'Velociraptor', isCorrect: false },\r\n            { answerText: 'Apatosaurus', isCorrect: true },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default questions;","import { waitForDomChange } from '@testing-library/dom';\nimport React, { useState } from 'react';\n\nimport questions from './que_ans.js'\n\nexport default function App() {\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tconst [quecount, setQuecount] = useState(1);\n\tconst queItems = [];\n\n\tconst refreshPage = ()=>{\n\t\twindow.location.reload();  \n\t}\n\n\tif ( queItems.length === 0 ) {\n\t\tfor (var i=0; i < questions.length; i++) {\n\t\t\tqueItems.push(i);\n\t\t} \n\t}\n\n\tconst [items, setItems] = useState(queItems);\n\n\t//const randomInit = Math.floor(Math.random() * items.length);\n\n\titems.sort(()=> 0.5 - Math.random());\n\tconst randomItem = items[0];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconsole.log(currentQuestion);\n\n\tconst handleAnswerButtonClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\talert (\"That is correct. Good job!\");\n\t\t\tsetScore(score + 1);\n\t\t} else {\n\t\t\talert (\"That is wrong. Nice try!\")\n\t\t}\n\n\t\tconsole.log(\"randominside \" + randomItem);\n\t\tfor( var y = 0; y < items.length; y++){ \n    \n\t\t\tif ( items[y] === currentQuestion) { \n\t\t\t\titems.splice(y, 1); \n\t\t\t\ty--;\n\t\t\t\tsetItems(items);\n\t\t\t}\n\t\t}\n\n\t\tsetQuecount(quecount + 1);\n\t\tif(quecount < 10) {\n\t\t\tsetCurrentQuestion(items[0]);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t}\n\n\t//Sorting Answer Set\n\tconst sortAnswers = questions[currentQuestion].answerOptions;\n\tsortAnswers.sort(()=> 0.5 - Math.random());\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>You scored {score} out of 10\n\t\t\t\t\t<br></br><button onClick={refreshPage}>Another game?</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>What dinousaur is this?</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<img className='img-dino' src={questions[currentQuestion].image} alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{sortAnswers.map((answerOptions, index) => (\n\t\t\t\t\t\t\t<button key={index} onClick={() => handleAnswerButtonClick(answerOptions.isCorrect)}>{answerOptions.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}